# Generated by Django 5.1.7 on 2025-05-06 10:23

import accounts.models
import django.core.validators
import django.db.models.deletion
import taggit.managers
import utils.custom_fields.phone_number_field
import utils.validate.validators_image
import utils.validate.validators_persian
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='عنوان')),
                ('is_active', models.BooleanField(default=True, verbose_name='وضعیت فعال بودن/نبودن')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ویرایش')),
            ],
            options={
                'verbose_name': 'شغل',
                'verbose_name_plural': 'شغل ها',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='نام مهارت')),
                ('is_active', models.BooleanField(default=True, verbose_name='وضعیت فعال بودن/نبودن')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ویرایش')),
            ],
            options={
                'verbose_name': 'مهارت',
                'verbose_name_plural': 'مهارت ها',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='آدرس ایمیل')),
                ('phone', utils.custom_fields.phone_number_field.PhoneNumberField(db_index=True, max_length=13, unique=True, verbose_name='شماره موبایل')),
                ('email_verify_token', models.SlugField(blank=True, max_length=72, null=True, verbose_name='کد تایید ایمیل')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, validators=[utils.validate.validators_persian.validate_persian], verbose_name='نام')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, validators=[utils.validate.validators_persian.validate_persian], verbose_name='نام خانوادگی')),
                ('is_active', models.BooleanField(default=True, verbose_name='وضعیت فعال بودن/نبودن')),
                ('is_admin', models.BooleanField(default=False, verbose_name='ادمین بودن/نبودن')),
                ('is_staff', models.BooleanField(default=False, verbose_name='وضعیت کارمند بودن/نبودن')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت نام')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ویرایش')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
                'db_table': 'custom_user',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_display', models.BooleanField(default=False, verbose_name='وضعیت نمایش')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_group', to='auth.group', verbose_name='گروه')),
            ],
            options={
                'verbose_name': 'گروه سفارشی',
                'verbose_name_plural': 'گروه های سفارشی',
                'ordering': ['group'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='نام کاربری باید فقط شامل حروف کوچک انگلیسی و اعداد باشد و نباید فاصله یا علامت خاصی داشته باشد.', regex='^[a-z0-9\\-_]{3,50}$')], verbose_name='نام کاربری')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت نام')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ویرایش')),
                ('roles', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='نقش های کارمند')),
            ],
            options={
                'verbose_name': 'پروفایل کارمند',
                'verbose_name_plural': 'پروفایل کارمندان',
                'permissions': (('can_teacher', 'Can teacher'), ('can_employee', 'Can employee')),
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media_type', models.CharField(choices=[('telegram', 'تلگرام'), ('instagram', 'اینستاگرام'), ('linkedin', 'لینکدین'), ('github', 'گیت\u200cهاب')], max_length=20, verbose_name='نوع شبکه اجتماعی')),
                ('link', models.URLField(unique=True, verbose_name='آدرس')),
                ('employee_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_link', to='accounts.employeeprofile', verbose_name='پروفایل کارمند')),
            ],
            options={
                'verbose_name': 'لینک اجتماعی',
                'verbose_name_plural': 'لینک های اجتماعی',
                'ordering': ['employee_profile', 'id'],
                'permissions': (('can_teacher', 'Can teacher'), ('can_employee', 'Can employee')),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.get_upload_avatar, validators=[utils.validate.validators_image.validate_image_size], verbose_name='عکس پروفایل')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='بیوگرافی')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='سن')),
                ('gender', models.CharField(blank=True, choices=[('M', 'مرد'), ('F', 'زن')], max_length=1, null=True, verbose_name='جنسیت')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت نام')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ ویرایش')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to='accounts.job', verbose_name='شغل')),
                ('skills', models.ManyToManyField(blank=True, help_text='مهارت\u200cهای تخصصی کاربر', related_name='user_profile', to='accounts.skill', verbose_name='مهارت ها')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'پروفایل کاربر',
                'verbose_name_plural': 'پروفایل کاربران',
                'db_table': 'user_profile',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='employeeprofile',
            name='user_profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to='accounts.userprofile', verbose_name='پروفایل عمومی کاربر'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone'], name='custom_user_phone_e281b2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email_verify_token'], name='custom_user_email_v_8d5cf4_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeprofile',
            index=models.Index(fields=['username'], name='accounts_em_usernam_09d81f_idx'),
        ),
    ]
